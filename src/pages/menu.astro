---
import Layout from '../layouts/Layout.astro';
import '../../styles/base.css';
import { getNotionSandwich, getNotionCategories } from '../utils';
import saladImg from "../assets/salad.webp";
import { Image } from 'astro:assets';
import sandwich from '../../data.json'
import fs from "fs";
import MenuComponent from '../components/MenuComponent';

/* const notionOther = await getNotionProperties({
	auth: import.meta.env.NOTION_API_KEY,
}); */

const notionSandwich = await getNotionSandwich({
	auth: import.meta.env.NOTION_API_KEY,
})
const notionCategories = await getNotionCategories({
   auth: import.meta.env.NOTION_API_KEY,
})

const categories = await Promise.all(
   notionCategories.map(async ( option : any) => {
      return (option.name);
   })
)

/* const other = await Promise.all(
	notionOther.map(async ({ properties }: any) => {
		let title = '';
		let img = '';
		let description = '';
		if (properties.Picture.files[0]) {
			img = properties.Picture.files[0].file.url || '';
		}
		if (properties.Title.title[0]) {
			title = properties.Title.title[0].plain_text || '';
		}
		if (properties.Description.rich_text[0]) {
			description = properties.Description.rich_text[0].plain_text || '';
		}
		const isAvailable = properties.Available.checkbox;
		const price = properties.Price.number;
		return { img, title, isAvailable, price, description };
	})
); */

const sandwiches = await Promise.all(
	notionSandwich.map(async ({ properties }: any) => {
		console.log("getting sandwichesss");
		let title = '';
/* 		let img = '';
      let imgName = ''; */
		let description = '';
      let category = '🍱 Other';
/* 		if (properties.Picture.files[0]) {
			img = properties.Picture.files[0].file.url || '';
         imgName = properties.Picture.files[0].name
		} */
		if (properties.Title.title[0]) {
			title = properties.Title.title[0].plain_text || '';
		}
		if (properties.Description.rich_text[0]) {
			description = properties.Description.rich_text[0].plain_text || '';
		}
      if (properties.Category.select !== null) {
         category = properties.Category.select.name;
      }
      const id = properties.ID.unique_id.number;
		const isAvailable = properties.Available.checkbox;
		const price = properties.Price.number;
		return { id, title, isAvailable, price, description, category };
	})
);

const saveObjectsToJson = async (objects, filename) => {
   console.log("Converting Data to JSON")
  try {
    const json = JSON.stringify(objects, null, 2);
    await fs.promises.writeFile(filename, json);
    console.log(`Data saved as ${filename}`);
  } catch (error) {
    console.error('Error saving data as JSON file:', error);
  }
};

// Example usage
saveObjectsToJson(sandwiches, 'data.json');
---

<Layout title="Menu">
	<MenuComponent categories={categories} sandwiches={sandwiches} client:load/>
</Layout>